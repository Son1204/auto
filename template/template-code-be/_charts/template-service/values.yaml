replicaCount: 1

image:
  repository: dx/#{project-name}-service
  pullPolicy: IfNotPresent
  tag: "1.0.0"

activeProfiles: ""
timeZone: Asia/Ho_Chi_Minh
jvmOptions: >-
  -Xms1024m -Xmx1024m
#  -Dcom.sun.management.jmxremote
#  -Dcom.sun.management.jmxremote.authenticate=false
#  -Dcom.sun.management.jmxremote.ssl=false
#  -Dcom.sun.management.jmxremote.local.only=false
#  -Dcom.sun.management.jmxremote.port=1099
#  -Dcom.sun.management.jmxremote.rmi.port=1099
#  -Djava.rmi.server.hostname=127.0.0.1
#  -XX:+HeapDumpOnOutOfMemoryError
#  -XX:HeapDumpPath=/data/invoice-service.bin

imagePullSecrets:
  - name: nexus

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/port: "8080"
  prometheus.io/path: '/actuator/prometheus'

podSecurityContext:
  fsGroup: 1000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  ports:
    - name: http
      containerPort: 8080
      port: 8080
      protocol: TCP
    - name: jmx
      containerPort: 1099
      port: 1099
      protocol: TCP
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: "8080"
    prometheus.io/path: '/actuator/prometheus'

ingress:
  enabled: false
  className: ""
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    memory: 1500Mi
  requests:
    cpu: 250m
    memory: 1500Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

persistence:
  enabled: false
  mountPath: /data
  size: 1Gi
  storageClass: ""
  accessModes:
    - ReadWriteOnce

nodeSelector: { }

tolerations: [ ]

affinity: { }

hostAliases: []

readinessProbeEnabled: true
readinessProbe:
  httpGet:
    port: 8080
    path: /actuator/health/readiness
  timeoutSeconds: 30
  successThreshold: 1
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 5

livenessProbeEnabled: true
livenessProbe:
  httpGet:
    port: 8080
    path: /actuator/health/liveness
  timeoutSeconds: 30
  successThreshold: 1
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 5

